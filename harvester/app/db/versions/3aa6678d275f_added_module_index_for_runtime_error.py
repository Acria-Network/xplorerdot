"""Added module index for runtime error

Revision ID: 3aa6678d275f
Revises: 38a7f29de7c7
Create Date: 2020-06-22 13:56:59.441054

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3aa6678d275f'
down_revision = '38a7f29de7c7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_data_storage_block_id', table_name='data_storage')
    op.drop_index('ix_data_storage_spec_version_id', table_name='data_storage')
    op.drop_index('ix_data_storage_storage_key', table_name='data_storage')
    op.drop_index('ix_data_storage_storage_key_prefix', table_name='data_storage')
    op.drop_table('data_storage')
    op.alter_column('data_account', 'has_identity',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'has_subidentity',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_contract',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_council_member',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_nominator',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_reaped',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_registrar',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_sudo',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_tech_comm_member',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_treasury',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'is_validator',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_council_member',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_nominator',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_registrar',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_sudo',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_tech_comm_member',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account', 'was_validator',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account_index', 'is_reclaimable',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_account_index', 'is_reclaimed',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_block', 'datetime',
               existing_type=mysql.DATETIME(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('data_event', 'codec_error',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_extrinsic', 'codec_error',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_extrinsic', 'signature',
               existing_type=mysql.VARCHAR(length=128),
               type_=sa.String(length=130),
               existing_nullable=True)
    op.alter_column('data_reorg_block', 'datetime',
               existing_type=mysql.DATETIME(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('data_reorg_event', 'codec_error',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_reorg_extrinsic', 'codec_error',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('data_reorg_extrinsic', 'signature',
               existing_type=mysql.VARCHAR(length=128),
               type_=sa.String(length=130),
               existing_nullable=True)
    op.alter_column('harvester_status', 'last_modified',
               existing_type=mysql.DATETIME(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('runtime_error', sa.Column('module_index', sa.Integer(), nullable=True))
    op.alter_column('runtime_type', 'is_primitive_core',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('runtime_type', 'is_primitive_runtime',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('runtime_type', 'is_primitive_runtime',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('runtime_type', 'is_primitive_core',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.drop_column('runtime_error', 'module_index')
    op.alter_column('harvester_status', 'last_modified',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    op.alter_column('data_reorg_extrinsic', 'signature',
               existing_type=sa.String(length=130),
               type_=mysql.VARCHAR(length=128),
               existing_nullable=True)
    op.alter_column('data_reorg_extrinsic', 'codec_error',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_reorg_event', 'codec_error',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_reorg_block', 'datetime',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    op.alter_column('data_extrinsic', 'signature',
               existing_type=sa.String(length=130),
               type_=mysql.VARCHAR(length=128),
               existing_nullable=True)
    op.alter_column('data_extrinsic', 'codec_error',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_event', 'codec_error',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_block', 'datetime',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.DATETIME(),
               existing_nullable=True)
    op.alter_column('data_account_index', 'is_reclaimed',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account_index', 'is_reclaimable',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_validator',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_tech_comm_member',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_sudo',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_registrar',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_nominator',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'was_council_member',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_validator',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_treasury',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_tech_comm_member',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_sudo',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_registrar',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_reaped',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_nominator',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_council_member',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'is_contract',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'has_subidentity',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.alter_column('data_account', 'has_identity',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
    op.create_table('data_storage',
    sa.Column('block_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('storage_key', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('storage_key_prefix', mysql.VARCHAR(length=64), nullable=True),
    sa.Column('spec_version_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('module_prefix', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('function_name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('return_type', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('data', mysql.JSON(), nullable=True),
    sa.Column('data_raw', mysql.LONGTEXT(), nullable=True),
    sa.Column('error', mysql.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('comments', mysql.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('block_id', 'storage_key'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_data_storage_storage_key_prefix', 'data_storage', ['storage_key_prefix'], unique=False)
    op.create_index('ix_data_storage_storage_key', 'data_storage', ['storage_key'], unique=False)
    op.create_index('ix_data_storage_spec_version_id', 'data_storage', ['spec_version_id'], unique=False)
    op.create_index('ix_data_storage_block_id', 'data_storage', ['block_id'], unique=False)
    # ### end Alembic commands ###
